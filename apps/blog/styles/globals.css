@import "tailwindcss";

@theme {
  --color-background: var(--color-white);
  --color-foreground: var(--color-black);

  --color-card: var(--color-white);
  --color-card-foreground: var(--color-black);
  --color-popover: var(--color-neutral-200);
  --color-popover-foreground: var(--color-white);

  --color-primary: var(--color-black);
  --color-primary-foreground: var(--color-white);
  --color-secondary: var(--color-neutral-200);
  --color-secondary-foreground: var(--color-black);
  --color-muted: --alpha(var(--color-neutral-400) / 20%);
  --color-muted-foreground: var(--color-black);
  --color-accent: oklch(0.88 0.2641 140.8);
  --color-accent-foreground: var(--color-black);
  --color-destructive: oklch(0.55 0.2034 27.09);
  --color-destructive-foreground: var(--color-black);

  --color-border: var(--color-neutral-300);
  --color-input: var(--color-neutral-100);
  --color-ring: var(--color-accent);

  --spacing: calc(21.5 / 16 * 1rem);

  --animate-blink: blink 1s step-start infinite;

  @keyframes blink {
    50% {
      opacity: 0;
    }
  }
}

/* Numbered List */

@layer components {
  body {
    counter-reset: list-counter;
  }

  .numbered-list-item {
    counter-increment: list-counter;

    &::before {
      content: counter(list-counter) ".";
    }

    & + :not(&) {
      counter-reset: list-counter;
    }
  }
}

/* Shiki */

@theme {
  --color-shiki-diff-add: --alpha(var(--color-emerald-400) / 16%);
  --color-shiki-diff-add-symbol: var(--color-green-400);
  --color-shiki-diff-remove: --alpha(var(--color-rose-500) / 16%);
  --color-shiki-diff-remove-symbol: var(--color-red-400);
  --color-shiki-highlight: --alpha(var(--color-slate-500) / 16%);
  --color-shiki-error: --alpha(var(--color-rose-500) / 16%);
  --color-shiki-warning: --alpha(var(--color-yellow-500) / 16%);
  --color-shiki-word-highlight: var(--color-muted);
}

@layer utilities {
  .shiki {
    @apply relative pl-[3ch] py-1 whitespace-pre-wrap overflow-auto;

    & code .line {
      @apply inline-block -mx-[3ch] pl-[3ch] pr-[1ch] w-[calc(100%+3ch)];

      /* transformerNotationWordHighlight */

      & .highlighted-word {
        @apply -mx-[3px] px-[3px] bg-shiki-word-highlight;
      }
    }

    /* transformerNotationDiff */

    &.has-diff code .line.diff {
      @apply transition-[background-color] duration-500;

      &::before {
        @apply absolute left-[1ch];
      }

      &.add {
        @apply bg-shiki-diff-add;

        &::before {
          @apply text-shiki-diff-add-symbol content-['+'];
        }
      }

      &.remove {
        @apply bg-shiki-diff-remove opacity-70;

        &::before {
          @apply text-shiki-diff-remove-symbol content-['-'];
        }
      }
    }

    /* transformerNotationHighlight */

    &.has-highlighted code .line.highlighted {
      @apply bg-shiki-highlight transition-[background-color] duration-500;

      /* transformerNotationErrorLevel */

      &.error {
        @apply bg-shiki-error;
      }

      &.warning {
        @apply bg-shiki-warning;
      }
    }

    /* transformerNotationFocus */

    &.has-focused {
      & code .line:not(.focused) {
        @apply opacity-70 blur-[0.095rem] transition-[filter,opacity] duration-300;
      }

      &:hover code .line:not(.focused) {
        @apply opacity-100 blur-none;
      }
    }
  }
}
